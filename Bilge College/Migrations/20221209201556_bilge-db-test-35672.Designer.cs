// <auto-generated />
using System;
using Bilge_College.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bilge_College.Migrations
{
    [DbContext(typeof(BilgeDbContext))]
    [Migration("20221209201556_bilge-db-test-35672")]
    partial class bilgedbtest35672
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("Duty")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 111, DateTimeKind.Local).AddTicks(9507),
                            Duty = "Administrator",
                            Email = "chucklockwood@live.com",
                            FirstName = "Chuck",
                            Image = "None",
                            LastName = "LockWood",
                            Password = "12345678",
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 112, DateTimeKind.Local).AddTicks(262),
                            Duty = "Co-Administrator",
                            Email = "samwinchester@live.com",
                            FirstName = "Sam",
                            Image = "None",
                            LastName = "Winchester",
                            Password = "12345678",
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 112, DateTimeKind.Local).AddTicks(264),
                            Duty = "Co-Administrator",
                            Email = "deanwinchester@live.com",
                            FirstName = "Dean",
                            Image = "None",
                            LastName = "Winchester",
                            Password = "12345678",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("Char(1)");

                    b.Property<int>("Capacity")
                        .HasColumnType("Int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("INT");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = 24,
                            Branch = "A",
                            Capacity = 25,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 114, DateTimeKind.Local).AddTicks(4336),
                            Grade = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Branch = "B",
                            Capacity = 25,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 114, DateTimeKind.Local).AddTicks(4664),
                            Grade = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Branch = "C",
                            Capacity = 25,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 114, DateTimeKind.Local).AddTicks(4667),
                            Grade = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Inspector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("Duty")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.ToTable("Inspectors");

                    b.HasData(
                        new
                        {
                            Id = 27,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 115, DateTimeKind.Local).AddTicks(8080),
                            Duty = "Pirate",
                            Email = "jacksparrow@live.com",
                            FirstName = "Jack",
                            Image = "None",
                            LastName = "Sparrow",
                            Password = "12345678",
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 115, DateTimeKind.Local).AddTicks(8995),
                            Duty = "Maniac",
                            Email = "billylittle@live.com",
                            FirstName = "Billy",
                            Image = "None",
                            LastName = "Little",
                            Password = "12345678",
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 115, DateTimeKind.Local).AddTicks(8998),
                            Duty = "Astronout",
                            Email = "buzzlightyear@live.com",
                            FirstName = "Buzz",
                            Image = "None",
                            LastName = "Lightyear",
                            Password = "12345678",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvarageScore")
                        .HasColumnType("Int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("FirstExamScore")
                        .HasColumnType("Int");

                    b.Property<int>("SchoolReportId")
                        .HasColumnType("int");

                    b.Property<int>("SecondExamScore")
                        .HasColumnType("Int");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<int>("SubSubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SchoolReportId");

                    b.HasIndex("SubSubjectId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 30,
                            AvarageScore = 55,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 120, DateTimeKind.Local).AddTicks(5959),
                            FirstExamScore = 60,
                            SchoolReportId = 45,
                            SecondExamScore = 50,
                            Status = 1,
                            SubSubjectId = 60
                        },
                        new
                        {
                            Id = 31,
                            AvarageScore = 70,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 120, DateTimeKind.Local).AddTicks(6789),
                            FirstExamScore = 70,
                            SchoolReportId = 46,
                            SecondExamScore = 70,
                            Status = 1,
                            SubSubjectId = 61
                        },
                        new
                        {
                            Id = 32,
                            AvarageScore = 80,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 120, DateTimeKind.Local).AddTicks(6793),
                            FirstExamScore = 80,
                            SchoolReportId = 47,
                            SecondExamScore = 80,
                            Status = 1,
                            SubSubjectId = 62
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("HomePhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("WorkPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Parents");

                    b.HasData(
                        new
                        {
                            Id = 33,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 122, DateTimeKind.Local).AddTicks(4837),
                            Email = "ezioauidotore@live.com",
                            FirstName = "Ezio",
                            HomeAddress = "NoAddress",
                            HomePhone = "123456789",
                            LastName = "Auidotore",
                            Password = "12345678",
                            Status = 1,
                            WorkPhone = "123456789"
                        },
                        new
                        {
                            Id = 34,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 122, DateTimeKind.Local).AddTicks(5971),
                            Email = "altairniobe@live.com",
                            FirstName = "Altair",
                            HomeAddress = "NoAddress",
                            HomePhone = "1234567899",
                            LastName = "Niobe",
                            Password = "12345678",
                            Status = 1,
                            WorkPhone = "123456789"
                        },
                        new
                        {
                            Id = 35,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 122, DateTimeKind.Local).AddTicks(5974),
                            Email = "ezioauidotore@live.com",
                            FirstName = "Claire",
                            HomeAddress = "NoAddress",
                            HomePhone = "12345678900",
                            LastName = "Redfield",
                            Password = "12345678",
                            Status = 1,
                            WorkPhone = "123456789"
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.ParentMessage", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("AdminId", "ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("ParentMessages");

                    b.HasData(
                        new
                        {
                            AdminId = 21,
                            ParentId = 33,
                            Context = "This is a test message",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 128, DateTimeKind.Local).AddTicks(308),
                            Status = 1,
                            Title = "Hello"
                        },
                        new
                        {
                            AdminId = 22,
                            ParentId = 34,
                            Context = "This is a test message2",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 128, DateTimeKind.Local).AddTicks(995),
                            Status = 1,
                            Title = "Hello2"
                        },
                        new
                        {
                            AdminId = 23,
                            ParentId = 35,
                            Context = "This is a test message3",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 128, DateTimeKind.Local).AddTicks(998),
                            Status = 1,
                            Title = "Hello3"
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.ParentNotice", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("AdminId", "ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("ParentNotices");

                    b.HasData(
                        new
                        {
                            AdminId = 21,
                            ParentId = 33,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 129, DateTimeKind.Local).AddTicks(9024),
                            Description = "This is a test notice",
                            Status = 1,
                            Title = "Hello"
                        },
                        new
                        {
                            AdminId = 22,
                            ParentId = 34,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 129, DateTimeKind.Local).AddTicks(9692),
                            Description = "This is a test notice2",
                            Status = 1,
                            Title = "Hello2"
                        },
                        new
                        {
                            AdminId = 23,
                            ParentId = 35,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 129, DateTimeKind.Local).AddTicks(9695),
                            Description = "This is a test notice3",
                            Status = 1,
                            Title = "Hello3"
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("INT");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            Id = 42,
                            Capacity = 1222,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 131, DateTimeKind.Local).AddTicks(3811),
                            Level = 1,
                            Rate = 58,
                            SchoolName = "Testschool",
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Capacity = 1244,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 131, DateTimeKind.Local).AddTicks(4446),
                            Level = 1,
                            Rate = 57,
                            SchoolName = "Testschool2",
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Capacity = 1253,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 131, DateTimeKind.Local).AddTicks(4449),
                            Level = 2,
                            Rate = 67,
                            SchoolName = "Testschool3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SchoolReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbsentDay")
                        .HasColumnType("Int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Term")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("SchoolReports");

                    b.HasData(
                        new
                        {
                            Id = 45,
                            AbsentDay = 5,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 133, DateTimeKind.Local).AddTicks(354),
                            Status = 1,
                            StudentId = 48,
                            Term = 1
                        },
                        new
                        {
                            Id = 46,
                            AbsentDay = 7,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 133, DateTimeKind.Local).AddTicks(787),
                            Status = 1,
                            StudentId = 49,
                            Term = 1
                        },
                        new
                        {
                            Id = 47,
                            AbsentDay = 9,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 133, DateTimeKind.Local).AddTicks(790),
                            Status = 1,
                            StudentId = 50,
                            Term = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("INT");

                    b.Property<int>("AvarageScore")
                        .HasColumnType("Int");

                    b.Property<DateTime>("BirthDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("INT");

                    b.Property<int>("Grade")
                        .HasColumnType("INT");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("SchoolNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 48,
                            AttendanceStatus = 1,
                            AvarageScore = 70,
                            BirthDate = new DateTime(1995, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassroomId = 24,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 135, DateTimeKind.Local).AddTicks(9851),
                            Email = "johnswear@live.com",
                            FirstName = "John",
                            Gender = 1,
                            Grade = 1,
                            Image = "Empty",
                            LastName = "Swear",
                            Password = "12345678",
                            SchoolId = 42,
                            SchoolNumber = "103",
                            Status = 1
                        },
                        new
                        {
                            Id = 49,
                            AttendanceStatus = 1,
                            AvarageScore = 85,
                            BirthDate = new DateTime(1995, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassroomId = 25,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 136, DateTimeKind.Local).AddTicks(1758),
                            Email = "callyswear@live.com",
                            FirstName = "Cally",
                            Gender = 1,
                            Grade = 1,
                            Image = "Empty",
                            LastName = "Swear",
                            Password = "12345678",
                            SchoolId = 43,
                            SchoolNumber = "104",
                            Status = 1
                        },
                        new
                        {
                            Id = 50,
                            AttendanceStatus = 1,
                            AvarageScore = 90,
                            BirthDate = new DateTime(1990, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassroomId = 26,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 136, DateTimeKind.Local).AddTicks(1762),
                            Email = "klausainzbell@live.com",
                            FirstName = "Klaus",
                            Gender = 1,
                            Grade = 1,
                            Image = "Empty",
                            LastName = "Ainzbell",
                            Password = "12345678",
                            SchoolId = 44,
                            SchoolNumber = "105",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.StudentMessage", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("AdminId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentMessages");

                    b.HasData(
                        new
                        {
                            AdminId = 21,
                            StudentId = 48,
                            Context = "This is a test message",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 137, DateTimeKind.Local).AddTicks(9999),
                            Status = 1,
                            Title = "Hello"
                        },
                        new
                        {
                            AdminId = 22,
                            StudentId = 49,
                            Context = "This is a test message2",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 138, DateTimeKind.Local).AddTicks(662),
                            Status = 1,
                            Title = "Hello2"
                        },
                        new
                        {
                            AdminId = 23,
                            StudentId = 50,
                            Context = "This is a test message3",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 138, DateTimeKind.Local).AddTicks(665),
                            Status = 1,
                            Title = "Hello3"
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.StudentNotice", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("AdminId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentNotices");

                    b.HasData(
                        new
                        {
                            AdminId = 21,
                            StudentId = 48,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 139, DateTimeKind.Local).AddTicks(8123),
                            Description = "This is a test notice",
                            Status = 1,
                            Title = "Hello"
                        },
                        new
                        {
                            AdminId = 22,
                            StudentId = 49,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 139, DateTimeKind.Local).AddTicks(8782),
                            Description = "This is a test notice2",
                            Status = 1,
                            Title = "Hello2"
                        },
                        new
                        {
                            AdminId = 23,
                            StudentId = 50,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 139, DateTimeKind.Local).AddTicks(8785),
                            Description = "This is a test notice3",
                            Status = 1,
                            Title = "Hello3"
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.StudentParent", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("StudentId", "ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("StudentParents");

                    b.HasData(
                        new
                        {
                            StudentId = 48,
                            ParentId = 33,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 141, DateTimeKind.Local).AddTicks(4840),
                            Status = 1
                        },
                        new
                        {
                            StudentId = 49,
                            ParentId = 34,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 141, DateTimeKind.Local).AddTicks(5220),
                            Status = 1
                        },
                        new
                        {
                            StudentId = 50,
                            ParentId = 35,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 141, DateTimeKind.Local).AddTicks(5222),
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SubSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("INT");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<int>("SubSubjectCredit")
                        .HasColumnType("Int");

                    b.Property<string>("SubSubjectsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("WeeklyClassTime")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubSubjects");

                    b.HasData(
                        new
                        {
                            Id = 60,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 145, DateTimeKind.Local).AddTicks(5993),
                            Grade = 1,
                            Status = 1,
                            SubSubjectCredit = 6,
                            SubSubjectsName = "SubSubject1",
                            SubjectId = 57,
                            WeeklyClassTime = 5
                        },
                        new
                        {
                            Id = 61,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 145, DateTimeKind.Local).AddTicks(6670),
                            Grade = 1,
                            Status = 1,
                            SubSubjectCredit = 5,
                            SubSubjectsName = "SubSubject2",
                            SubjectId = 58,
                            WeeklyClassTime = 4
                        },
                        new
                        {
                            Id = 62,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 145, DateTimeKind.Local).AddTicks(6674),
                            Grade = 1,
                            Status = 1,
                            SubSubjectCredit = 3,
                            SubSubjectsName = "SubSubject3",
                            SubjectId = 59,
                            WeeklyClassTime = 3
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SubSubjectClassroom", b =>
                {
                    b.Property<int>("SubSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("SubSubjectId", "ClassroomId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("SubSubjectClassrooms");

                    b.HasData(
                        new
                        {
                            SubSubjectId = 60,
                            ClassroomId = 24,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 144, DateTimeKind.Local).AddTicks(321),
                            Status = 1
                        },
                        new
                        {
                            SubSubjectId = 61,
                            ClassroomId = 25,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 144, DateTimeKind.Local).AddTicks(691),
                            Status = 1
                        },
                        new
                        {
                            SubSubjectId = 62,
                            ClassroomId = 26,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 144, DateTimeKind.Local).AddTicks(693),
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SubSubjectTeacher", b =>
                {
                    b.Property<int>("SubSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("SubSubjectId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SubSubjectTeachers");

                    b.HasData(
                        new
                        {
                            SubSubjectId = 60,
                            TeacherId = 63,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 147, DateTimeKind.Local).AddTicks(2618),
                            Status = 1
                        },
                        new
                        {
                            SubSubjectId = 61,
                            TeacherId = 64,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 147, DateTimeKind.Local).AddTicks(2989),
                            Status = 1
                        },
                        new
                        {
                            SubSubjectId = 62,
                            TeacherId = 65,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 147, DateTimeKind.Local).AddTicks(2991),
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 57,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 142, DateTimeKind.Local).AddTicks(4456),
                            Status = 1,
                            SubjectName = "Subject1"
                        },
                        new
                        {
                            Id = 58,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 142, DateTimeKind.Local).AddTicks(4460),
                            Status = 1,
                            SubjectName = "Subject2"
                        },
                        new
                        {
                            Id = 59,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 142, DateTimeKind.Local).AddTicks(4463),
                            Status = 1,
                            SubjectName = "Subject3"
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<string>("Duty")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 63,
                            Branch = "Math",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 150, DateTimeKind.Local).AddTicks(4281),
                            Duty = "None",
                            Email = "williamjones@live.com",
                            FirstName = "William",
                            Image = "Empty",
                            LastName = "Jones",
                            Password = "12345678",
                            Status = 1
                        },
                        new
                        {
                            Id = 64,
                            Branch = "Physics",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 150, DateTimeKind.Local).AddTicks(5382),
                            Duty = "None",
                            Email = "moirabarret@live.com",
                            FirstName = "Moira",
                            Image = "Empty",
                            LastName = "Barret",
                            Password = "12345678",
                            Status = 1
                        },
                        new
                        {
                            Id = 65,
                            Branch = "Biology",
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 150, DateTimeKind.Local).AddTicks(5386),
                            Duty = "None",
                            Email = "gabriellogan@live.com",
                            FirstName = "Gabriel",
                            Image = "Empty",
                            LastName = "Logan",
                            Password = "12345678",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.TeacherClassroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2")
                        ;

                    b.Property<DateTime?>("DeleteDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasMaxLength(7)
                        .HasColumnType("Datetime2");

                    b.HasKey("ClassroomId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherClassrooms");

                    b.HasData(
                        new
                        {
                            ClassroomId = 24,
                            TeacherId = 63,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 148, DateTimeKind.Local).AddTicks(8993),
                            Status = 1
                        },
                        new
                        {
                            ClassroomId = 25,
                            TeacherId = 64,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 148, DateTimeKind.Local).AddTicks(9825),
                            Status = 1
                        },
                        new
                        {
                            ClassroomId = 26,
                            TeacherId = 65,
                            CreateDate = new DateTime(2022, 12, 9, 23, 15, 55, 148, DateTimeKind.Local).AddTicks(9828),
                            Status = 1
                        });
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Note", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.SchoolReport", "SchoolReport")
                        .WithMany("Notes")
                        .HasForeignKey("SchoolReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.SubSubject", "SubSubject")
                        .WithMany("Notes")
                        .HasForeignKey("SubSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolReport");

                    b.Navigation("SubSubject");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.ParentMessage", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Admin", "Admin")
                        .WithMany("ParentMessages")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.Parent", "Parent")
                        .WithMany("ParentMessages")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.ParentNotice", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Admin", "Admin")
                        .WithMany("ParentNotices")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.Parent", "Parent")
                        .WithMany("ParentNotices")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SchoolReport", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Student", "Student")
                        .WithMany("SchoolReports")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Student", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Classroom", "Classroom")
                        .WithMany("Students")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("School");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.StudentMessage", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Admin", "Admin")
                        .WithMany("StudentMessages")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.Student", "Student")
                        .WithMany("StudentMessages")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.StudentNotice", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Admin", "Admin")
                        .WithMany("StudentNotices")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.Student", "Student")
                        .WithMany("StudentNotices")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.StudentParent", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Parent", "Parent")
                        .WithMany("StudentParent")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.Student", "Student")
                        .WithMany("StudentParent")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SubSubject", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Subject", "Subject")
                        .WithMany("SubSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SubSubjectClassroom", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Classroom", "Classroom")
                        .WithMany("SubSubjectClassrooms")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.SubSubject", "SubSubject")
                        .WithMany("SubSubjectClassrooms")
                        .HasForeignKey("SubSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("SubSubject");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SubSubjectTeacher", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.SubSubject", "SubSubject")
                        .WithMany("SubSubjectTeachers")
                        .HasForeignKey("SubSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.Teacher", "Teacher")
                        .WithMany("SubSubjectTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubSubject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.TeacherClassroom", b =>
                {
                    b.HasOne("Bilge_College.Models.Entities.Concrete.Classroom", "Classroom")
                        .WithMany("TeacherClassrooms")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge_College.Models.Entities.Concrete.Teacher", "Teacher")
                        .WithMany("TeacherClassrooms")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Admin", b =>
                {
                    b.Navigation("ParentMessages");

                    b.Navigation("ParentNotices");

                    b.Navigation("StudentMessages");

                    b.Navigation("StudentNotices");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Classroom", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("SubSubjectClassrooms");

                    b.Navigation("TeacherClassrooms");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Parent", b =>
                {
                    b.Navigation("ParentMessages");

                    b.Navigation("ParentNotices");

                    b.Navigation("StudentParent");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.School", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SchoolReport", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Student", b =>
                {
                    b.Navigation("SchoolReports");

                    b.Navigation("StudentMessages");

                    b.Navigation("StudentNotices");

                    b.Navigation("StudentParent");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.SubSubject", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("SubSubjectClassrooms");

                    b.Navigation("SubSubjectTeachers");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Subject", b =>
                {
                    b.Navigation("SubSubjects");
                });

            modelBuilder.Entity("Bilge_College.Models.Entities.Concrete.Teacher", b =>
                {
                    b.Navigation("SubSubjectTeachers");

                    b.Navigation("TeacherClassrooms");
                });
#pragma warning restore 612, 618
        }
    }
}
